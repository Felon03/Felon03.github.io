<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Python3脚本抓取Bing美图]]></title>
      <url>%2F2017%2F03%2F23%2FPython3%E8%84%9A%E6%9C%AC%E6%8A%93%E5%8F%96Bing%E7%BE%8E%E5%9B%BE%2F</url>
      <content type="text"><![CDATA[Python3脚本下载Bing美图 Bing首页每天都会展示不同的图片，如果每天都去首页下载就比较麻烦了，于是乎想到了用Python脚本来代替，自动保存到图片目录下，省时省力。 Bing美图APIBing官方有两个API：xml版： http://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1json版： http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1有了API就可以愉快地抓图了:D Python抓图至于为什么要用Python，前段时间学习了廖大的Python教程,算是跟着把整个教程做完了，就放了一段时间。现在突然想弄个小工具来下Bing美图，嗯，就是它了！ 用到的库 Requests Beautiful Soup 源代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546# -*- coding: utf-8 -*-import requestsimport reimport timeimport osimport jsonfrom bs4 import BeautifulSoupdef downloadPic(file_name, picurl): # 判断文件夹是否存在，如果不存在就新建 if os.path.exists(r'C:\Users\Freed\Pictures\bingwallpaper'): print('Find dir already...') else: print('Dir not found, makdir...') os.mkdir(r'C:\Users\Freed\Pictures\bingwallpaper') print('success...') if os.path.exists(r'c:\users\freed\pictures\bingwallpaper\\' + file_name): print('downlaod already...') else: pic = getHtml(picurl) fp = open(r'c:\users\freed\pictures\bingwallpaper\\' + file_name, 'wb') fp.write(pic) fp.close() def getHtml(url): r = requests.get(url) return r.contenturl = 'http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1'json_str = getHtml(url) # 得到的是strjson_str = json_str.decode()print(type(json_str))#print(json_str)json_list = json_str.split(',') # 得到list#print(json_list)pic_head = 'http://s.cn.bing.net'json_url = ''json_url = json_url.join(json_list[3])picurl = json_url[7:-1]picurl = pic_head + picurlprint(picurl)# 设置图片名称file_name = str("BingWallPaper-" + time.strftime('%Y-%m-%d',time.localtime(time.time())) + '.jpg')downloadPic(file_name, picurl) 用Pthon命令允许文件即可。到此大功告成! :D]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F03%2F21%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
